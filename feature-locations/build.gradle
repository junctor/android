plugins {
    alias libs.plugins.android.library
    alias libs.plugins.org.jetbrains.kotlin.android
    alias libs.plugins.compose.compiler
    alias libs.plugins.ktlint
}

android {
    namespace 'com.advice.locations'
    compileSdk libs.versions.compileSdk.get() as Integer

    defaultConfig {
        minSdk libs.versions.minSdk.get() as Integer
        targetSdk libs.versions.targetSdk.get() as Integer

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    buildFeatures {
        compose true
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
}

dependencies {
    implementation project(":core")
    implementation project(":ui")
    implementation project(":data")

    def composeBom = platform(libs.androidx.compose.bom)
    implementation composeBom
    androidTestImplementation composeBom

    implementation(libs.androidx.material3)
    implementation(libs.androidx.ui.tooling.preview)
    debugImplementation(libs.androidx.ui.tooling)

    implementation(libs.androidx.appcompat)
    implementation(libs.androidx.ktx)
    implementation(libs.android.material)
    implementation(libs.androidx.lifecycle.viewmodel.ktx)

    implementation(libs.koin)

    testImplementation(libs.junit)
    testImplementation(libs.mockk)
    testImplementation(libs.kotlinx.coroutines.test)
    androidTestImplementation(libs.ext.junit)
    androidTestImplementation(libs.espresso.core)
    androidTestImplementation(libs.androidx.annotation)
}
