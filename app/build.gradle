plugins {
    alias libs.plugins.android.application
    alias libs.plugins.compose.compiler
    alias libs.plugins.org.jetbrains.kotlin.android
    alias libs.plugins.google.services
    alias libs.plugins.firebase.crashlytics
    id 'kotlin-parcelize'
    alias libs.plugins.ktlint
}

android {
    namespace "com.shortstack.hackertracker"
    compileSdk 34

    defaultConfig {
        applicationId "com.shortstack.hackertracker"
        minSdk 26
        targetSdk 33
        versionCode 1
        versionName "7.7.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    buildFeatures {
        compose true
    }
    composeOptions {
        kotlinCompilerExtensionVersion = "1.4.0"
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    namespace 'com.shortstack.hackertracker'
}

dependencies {
    implementation project(':core')
    implementation project(':data')
    implementation project(':ui')
    implementation project(':feature-firebase')
    implementation project(':feature-merch')
    implementation project(':feature-locations')
    implementation project(':feature-reminder')
    implementation project(':feature-wifi')
    implementation project(":feature-organizations")
    implementation project(":feature-documents")
    implementation project(":feature-analytics")
    implementation project(':feature-play')
    implementation project(':feature-feedback')

    def composeBom = platform("androidx.compose:compose-bom:$composeVersion")
    implementation composeBom
    androidTestImplementation composeBom

    // Material Design 3
    implementation("androidx.compose.material3:material3")
    implementation("androidx.compose.ui:ui-tooling-preview")
    debugImplementation("androidx.compose.ui:ui-tooling")

    implementation("androidx.compose.foundation:foundation:1.6.0-alpha01")


    implementation libs.androidx.ktx
    implementation("androidx.lifecycle:lifecycle-viewmodel-ktx:2.2.0")
    implementation libs.androidx.appcompat
    implementation libs.android.material


    // Koin
    implementation libs.koin
    implementation "io.insert-koin:koin-androidx-compose:3.4.5"

    // Arch
    implementation "androidx.lifecycle:lifecycle-extensions:2.2.0"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:2.5.0-rc01"
    implementation("androidx.work:work-runtime-ktx:2.7.1")
    //implementation "android.arch.work:work-firebase:1.0.0-alpha11"

    // Coroutines
    implementation("org.jetbrains.kotlinx:kotlinx-coroutines-play-services:1.6.4")

    // Firebase
    implementation platform(libs.firebase.bom)
    implementation(libs.firebase.analytics.ktx)
    implementation(libs.firebase.firestore)
    implementation(libs.firebase.storage)
    implementation(libs.firebase.auth)
    implementation(libs.firebase.crashlytics)


    // Optional - Integration with activities
    implementation("androidx.activity:activity-compose:1.6.1")
    // Optional - Integration with ViewModels
    implementation("androidx.lifecycle:lifecycle-viewmodel-compose:2.5.1")

    implementation("androidx.compose.ui:ui-viewbinding:1.3.3")

    implementation("androidx.navigation:navigation-compose:2.5.3")


    // Utils
    implementation libs.gson

    // Testing
    testImplementation libs.junit
    testImplementation "io.mockk:mockk:1.12.4"
    testImplementation("com.nhaarman.mockitokotlin2:mockito-kotlin:2.2.0")
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:1.6.4"
    androidTestImplementation libs.ext.junit
    androidTestImplementation libs.espresso.core
}

ktlint {
    android.set true
    outputColorName.set "RED"
}
